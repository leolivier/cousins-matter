# Query: open
# Flags: CaseSensitive WordMatch IgnoreExcludeSettings
# Including: *.py
# Excluding: .venv/,*.log,LICENSE,*.po
# ContextLines: 1

cm_main/utils.py:
  167      membuf = BytesIO()
  168:     with Image.open(image_file) as img:
  169        img.save(membuf, format='JPEG', quality=90)

  314      file, ext = os.path.splitext(filename)
  315:     with Image.open(image.path) as img:
  316          if img.height > size or img.width > size:

cm_main/templatetags/cm_tags.py:
  172          raise TemplateSyntaxError(f"The file {css_url} does not exist.")
  173:     with open(css_path, "r") as f:
  174          css = f.read()

cm_main/views/views_general.py:
  48        FileWrapper(
  49:           open(the_file, "rb"),
  50            chunk_size,

  76      FileWrapper(
  77:           open(temp, "rb"),
  78            chunk_size,

galleries/tasks.py:
  62    membuffer = BytesIO()
  63:   with Image.open(filepath) as img:
  64      img = ImageOps.exif_transpose(img)  # avoid image rotating

galleries/tests/tests_bulk_upload.py:
  23      response = self.client.post(reverse('galleries:bulk_upload'),
  24:                                 {'zipfile': SimpleUploadedFile('test_bulk_import.zip', open(zipfile, 'rb').read(),
  25                                                                 content_type='application/zip')},

members/models.py:
  221        try:
  222:         img = Image.open(self.avatar.path)
  223          if img.height > max_size or img.width > max_size:

members/tasks.py:
  105      try:
  106:       with open(avatar, 'rb') as image_file:
  107          image = File(image_file)

troves/models.py:
  69        file, ext = os.path.splitext(filename)
  70:       with Image.open(self.picture.path) as img:
  71          if img.height > tns or img.width > tns:
