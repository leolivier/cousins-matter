#!/bin/bash

get_env() {
  local key="$1" val
	val=$(grep -m1 -E "^${key}=" .env | cut -d= -f2- || cut -d' ' -f1)  # second cut in case there is a comment after the value
	# if the value begins and ends with the same quotation mark (single or double), it is removed
	if [[ $val =~ ^\".*\"$ ]] || [[ $val =~ ^\'.*\'$ ]]; then
		val=${val:1:-1}
	fi
	printf '%s' "$val"
}

get_key() {
	local new_key=$(tr -dc '[:alnum:]!@#$%^*()_\-+={}[]:;<>?.' < /dev/urandom | head -c 64)
	printf '%s' "$new_key"
}

if ! grep -m1 -E -q "^SECRET_KEY=" .env; then
    echo "no SECRET_KEY variable found in .env, generating one"
		new_key=$(get_key)
		echo "# Don't change these 2 lines, they are automatically generated by rotate-secrets.sh" >> .env
		echo "SECRET_KEY='$new_key'" >> .env
		echo "PREVIOUS_SECRET_KEYS=''" >> .env
    exit 1
fi

OLD_SECRET_KEY=$(get_env SECRET_KEY)

new_key=$(get_key)
sed -ie "s/SECRET_KEY=.*/SECRET_KEY='$new_key'/" .env

if grep -m1 -E -q "^PREVIOUS_SECRET_KEYS=" .env; then
		PREVIOUS_SECRET_KEYS=$(get_env PREVIOUS_SECRET_KEYS)
		if [[ -z $PREVIOUS_SECRET_KEYS ]]; then
			sed -ie "s/PREVIOUS_SECRET_KEYS=.*/PREVIOUS_SECRET_KEYS='$OLD_SECRET_KEY'/" .env
		else
	    sed -ie "s/PREVIOUS_SECRET_KEYS=.*/PREVIOUS_SECRET_KEYS='$PREVIOUS_SECRET_KEYS,$OLD_SECRET_KEY'/" .env
		fi
else
    echo "PREVIOUS_SECRET_KEYS='$OLD_SECRET_KEY'" >> .env
fi
if [[ $? -ne 0 ]]; then
    echo "Error: Can't rotate SECRET_KEY"
		exit 1
else
    echo "Old SECRET_KEY added to PREVIOUS_SECRET_KEYS in .env"
    echo "SECRET_KEY rotated successfully"
fi